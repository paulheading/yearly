---
import { Info as InfoSvg } from "paully/svgs";
import InfoButton from "#components/Buttons/Info";
import CardCopy from "#components/Card/Copy";
import CardSettings from "#components/Card/Settings";
import attrs from "#selectors/attrs";

let { type, image, title, copy, settings, multiple, id } = Astro.props;

let typeIsConfig = type == "config";

let display = multiple && typeIsConfig ? "none" : "initial";

let props = {
  [attrs.data.type]: type,
  style: {
    display,
  },
};
---

<div {...props}>
  <div class="card-header">
    <img src={image} alt="" class:list={["profile", type]} />
    {
      multiple && (
        <InfoButton className="info-position">
          <InfoSvg className="info-svg" />
        </InfoButton>
      )
    }
  </div>
  {title && <h2 class="title">{title}</h2>}
  {
    typeIsConfig ? (
      <CardSettings settings={settings} id={id} />
    ) : (
      <CardCopy copy={copy} />
    )
  }
</div>

<style lang="scss">
  @use "#mixins" as *;

  .info-position {
    position: relative;
    top: -0.625rem;
  }

  .info-svg {
    display: block;
  }

  .card-header {
    grid-template-columns: $size-card-info $size-card-profile $size-card-info;
    margin-bottom: $margin-bottom-card-header;
    justify-content: space-between;
    margin-top: -$margin-top-card;
    align-items: flex-end;
    gap: $margin-card;
    display: grid;
  }

  .profile {
    @include size($size-card-profile);
    grid-column: 2;

    & {
      border: 1px solid black;
      border-radius: 50%;
      overflow: hidden;
    }
  }

  .profile.selected-state {
    border-color: green;
  }

  .title {
    margin-bottom: $margin-bottom-card-header;
    font-size: $h3-font-size;
  }
</style>
