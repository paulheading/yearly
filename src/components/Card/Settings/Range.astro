---
let { setting, setting_index } = Astro.props;

let { range } = setting;

let containerProps = {
  "class:list": [
    "setting",
    setting_index % 2 ? "even" : "odd",
    setting.editable && "editable",
  ],
};

let rangeProps = {
  value: setting.value,
  class: "slider",
  min: range.min,
  max: range.max,
};

let minProps = {
  class: "mins",
  style: {
    display: "none",
  },
};
---

<li {...containerProps}>
  <div class="wrap-title">
    <span class="title">{setting.title}</span>
    <span>
      <span class="output">none</span>
      <span {...minProps}>mins</span>
    </span>
  </div>

  <div class="wrap-slider">
    <input type="range" {...rangeProps} />
  </div>
</li>

<style lang="scss">
  @use "~mixins" as *;

  @mixin grid-defaults {
    gap: $margin-card;
    display: grid;
  }

  .setting {
    @include grid-defaults;

    & {
      padding: $padding-card-setting;
      font-weight: normal;
      list-style: none;
      text-align: left;
      margin-top: 0;
    }
  }

  .setting.odd {
    background-color: aliceblue;
  }

  .setting:not(:first-of-type) {
    border-top: 2px dashed;
  }

  .wrap-title {
    @include grid-defaults;

    & {
      justify-content: space-between;
      grid-auto-flow: column;
      align-items: center;
    }
  }

  .check.selected-state {
    fill: black;
  }

  .wrap-slider {
    padding-bottom: 4px;
    padding-top: 4px;
  }

  .slider {
    background: black;
    // border-radius: 4px;
    cursor: pointer;
    display: block;
    height: 4px;
    margin: 0;

    @include focus {
      @include dashed-box($offset: 6px);
    }

    // -webkit-appearance: none;
    // appearance: none;
    // width: 100%;
    // display: block;
    // outline: none;
  }

  .slider::-webkit-slider-thumb,
  .slider::-moz-range-thumb {
    // display: none;
    // -webkit-appearance: none;
    // appearance: none;
    // @include size(50px);
    // width: 50px;
    // height: 50px;
    // background: #04aa6d;
  }
</style>
