---
import { InvisibleButton } from "paully";
import SettingsToggle from "~Components/Card/Settings/Toggle";
import SettingsRange from "~Components/Card/Settings/Range";

let { settings } = Astro.props;

let colors = ["blue", "cyan", "purple", "pink", "red", "orange"];
let restartColors = () => color_index + 1 == colors.length;

let groups = [[]];
let group = 0;
let current = 0;
let max = 3;

let color_index = 0;
let setting_index = 0;

settings.forEach(function (setting) {
  groups[group].push(setting);
  current++;

  if (current % max == 0) {
    current = 0;
    groups.push([]);
    group++;
  }
});
---

<script src="~scripts/components/card/settings.js"></script>

{
  groups.map(function (group, index) {
    let display = index > 0 ? "none" : "block";

    return (
      <ul class="settings" style={{ display }}>
        {group.map(function (setting) {
          restartColors() ? (color_index = 0) : color_index++;

          setting_index++;

          let { value } = setting;

          let is = {
            boolean: typeof value == "boolean",
            number: typeof value == "number",
          };

          let color = colors[color_index];

          let props = {
            setting,
            setting_index,
            color,
          };

          if (is.boolean) return <SettingsToggle {...props} />;
          if (is.number) return <SettingsRange {...props} />;
        })}
      </ul>
    );
  })
}

{
  groups.length > 1 && (
    <div class="wrap-pagination">
      {groups.map(function (_, index) {
        return (
          <InvisibleButton
            data={index == 0 ? "active" : null}
            className="dot-button"
          />
        );
      })}
    </div>
  )
}

<style lang="scss">
  @use "~mixins" as *;

  .settings {
    max-width: $max-width-card-copy--config;
    border-radius: $border-radius-card;
    background-color: white;
    // min-height: toRem(84);
    min-width: toRem(206);
    font-size: 1.125rem;
    border: 1px solid;
    overflow: hidden;
    padding-left: 0;
    color: black;
    margin: 0;
  }

  .wrap-pagination {
    margin-top: $margin-bottom-card-header;
    justify-content: center;
    display: flex;
    gap: toRem(8);
  }

  .dot-button {
    @include size(1rem);
    border-radius: 50%;
    border: 2px solid;
  }

  .dot-button[data="active"] {
    background-color: black;
    pointer-events: none;
  }

  .dot-button[data="active"].selected-state {
    background-color: white;
  }
</style>
