---
import attrs from "~scripts/selectors/attrs";
import cnames from "~scripts/selectors/cnames";

let { aria } = attrs;

let { title, value } = Astro.props;

let buttonProps = {
  class: cnames.selectForm.button,
  [aria.controls]: "listbox",
  [aria.haspopup]: "listbox",
  [aria.expanded]: false,
  "data-id": value,
  role: "combobox",
  tabIndex: "0",
};
---

<button {...buttonProps}>{title}</button>

<style lang="scss" is:global>
  @use "~mixins" as *;

  $padding-select: 0.75rem;

  $background-color-select: white;

  $border-radius-select: toRem(8);

  .select-form-button {
    @include text-overflow;

    & {
      background-color: $background-color-select;
      border-radius: $border-radius-select;
      border: 1px solid currentColor;
      padding: $padding-select;
      padding-right: toRem(36);
      min-height: toRem(48.5);
      font-size: inherit;
      position: relative;
      text-align: left;
      width: 100%;

      @include focus {
        outline: 2px dashed;
        outline-offset: 4px;
      }
    }

    &[aria-expanded="true"] {
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }
  }

  .select-form-button::after {
    border: 6px solid currentColor;
    border-bottom-color: transparent;
    border-right-color: transparent;
    border-left-color: transparent;
    position: absolute;
    right: toRem(12);
    top: toRem(20);
    content: "";
    height: 0;
    width: 0;
  }

  .select-form-button[aria-expanded="true"]::after {
    border-bottom-color: currentColor;
    border-top-color: transparent;
    top: toRem(12);
  }
</style>
